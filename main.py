import asyncio

import websockets
from google.protobuf import symbol_database

# Generated by protoc
from events_pb2 import *
from team_data import custom_team_name

WEBSOCKET_HOST = "localhost"
WEBSOCKET_PORT = 7777

with open("templates/index.html", "r") as f:
    html_template = f.read()


def generate_html(rank="#0", team_name="", score="0"):
    return (
        html_template.replace("{{ rank }}", rank)
        .replace("{{ team_name }}", team_name)
        .replace("{{ score }}", score)
    )


async def modify_html(team_name: str):
    with open("index.html", "w") as f:
        code = generate_html(team_name=team_name)
        f.write(code)


async def update_team_name(websocket):
    print("Connected!")

    async for message in websocket:
        incoming = LiveAPIEvent()
        incoming.ParseFromString(message)
        result_type = incoming.gameMessage.TypeName()
        msg_result = symbol_database.Default().GetSymbol(result_type)()
        incoming.gameMessage.Unpack(msg_result)
        print(f"type: {result_type}")
        # print(f"python_type: {type(msg_result)}")
        # print(f"content: \n{msg_result}")

        # incoming = ObserverSwitched()
        # incoming.ParseFromString(message)
        if isinstance(msg_result, ObserverSwitched):
            target_player: Player = msg_result.target
            team_id: int = target_player.teamId
            team_name = str(custom_team_name.get(team_id, f"Team {team_id}"))

            await modify_html(team_name)
            print(f"Observer switched to Team {team_id}: {team_name}")


async def main():
    async with websockets.serve(update_team_name, WEBSOCKET_HOST, WEBSOCKET_PORT):
        print(f"Serving on {WEBSOCKET_HOST}:{WEBSOCKET_PORT}...")
        await asyncio.Future()


asyncio.run(main())
